server.port=8080

security.user.name=jihunim
security.user.password=mypassword


spring.h2.console.enabled=true
spring.h2.console.path=/h3-console
spring.datasource.platform=h2
#spring.datasource.url=jdbc:h2:tcp:./data/meet
spring.datasource.url=jdbc:h2:file:./data/meet
#this needs setJdbcUrl
#spring.datasource.jdbc-url=jdbc:h2:file:C:/data/test
#log
spring.jpa.show-sql=true

#OAuth2 Token 서버의정보와 Token이 종속된 client-id/client-secret
#security.oauth2.client.client-id=foo
#security.oauth2.client.client-secret=bar
#security.oauth2.resource.id=service
#security.oauth2.resource.tokenInfoUri=http://localhost:8081/oauth/check_token


#security.oauth2.jwt.keyUri=http://localhost:8081/oauth/token_key

#서버에 등록된 client_id와 새롭게 로그인할 페이지를 전달한다
#localhost:8080/oauth/authorize?response_type=code&client_id=foo&redirect_uri=http://localhost:8080/test/authorization-code&scope=read
#서버에 등록된 아이디/비밀번호로 로그인 완료시 code가 전달됐을것이다 그것을 아래에 입력 client_secret도 입력
#curl -F "grant_type=authorization_code" -F "code=RqG6AU" -F "client_id=foo" -F "scope=read" -F "client_secret=bar" -F "redirect_uri=http://localhost:8080/test/authorization-code" "http://foo:bar@localhost:8080/oauth/token"
#결과값: {"access_token":"5470f21f-b575-4c01-b155-5163962145a7","token_type":"bearer","refresh_token":"536f78e4-5751-461a-a7d4-762c9055eaf6","expires_in":43199,"scope":"read"}
#최종 api 호출방법:curl -H "Authorization: Bearer 5470f21f-b575-4c01-b155-5163962145a7" "http://localhost:8080/api/v1/users

#curl -F "grant_type=client_credentials" -F "scope=read" "http://foo:bar@localhost:8081/oauth/token"
#curl -H "Authorization: Bearer ff59276b-5cdd-4a80-b6e4-d6a443cfe8f3" "http://localhost:8080/api/v1/users"